#################################
#  Non-Specific Events
#################################  
[cmdrep]
search = (`cmdrep_indexes`)

[cmdrep_success]
search = (`cmdrep_indexes`) "return.error"="0"

[cmdrep_error]
search = (`cmdrep_indexes`) "return.error"!="0"

[cmdrep_interactive]
search = (`cmdrep_indexes`) subject.terminal_id.port!=0 NOT subject.audit_user_name="-1" 

[cmdrep_non-interactive]
search = (`cmdrep_indexes`) subject.terminal_id.port=0 OR subject.audit_user_name="-1"

#################################
#  Accounts (groups/users)
#################################  
# All account events
[cmdrep_account]
search = (`cmdrep_indexes` `cmdrep_sourcetype_account`)

# All group events
[cmdrep_account_group]
search = (`cmdrep_indexes` `cmdrep_sourcetype_account`) header.event_name="AUE_*_group"

# Group creation
[cmdrep_account_group-create]
search = (`cmdrep_indexes` `cmdrep_sourcetype_account`) header.event_name="AUE_create_group"

# Group deletion
[cmdrep_account_group-delete]
search = (`cmdrep_indexes` `cmdrep_sourcetype_account`) header.event_name="AUE_delete_group"

# Group modification
[cmdrep_account_group-modify]
search = (`cmdrep_indexes` `cmdrep_sourcetype_account`) (header.event_name="AUE_modify_group" OR header.event_name="AUE_add_to_group")

# All user events
[cmdrep_account_user]
search = (`cmdrep_indexes` `cmdrep_sourcetype_account`) header.event_name="AUE_*_user"

# User creation
[cmdrep_account_user-create]
search = (`cmdrep_indexes` `cmdrep_sourcetype_account`) header.event_name="AUE_create_user"

# User deletion
[cmdrep_account_user-delete]
search = (`cmdrep_indexes` `cmdrep_sourcetype_account`) header.event_name="AUE_delete_user"

# User modification
[cmdrep_account_user-modify]
search = (`cmdrep_indexes` `cmdrep_sourcetype_account`) header.event_name="AUE_modify_user"


#################################
#  Audit
#################################  
# All audit events
[cmdrep_audit]
search = (`cmdrep_indexes` `cmdrep_sourcetype_audit`)


#################################
#  Authentication
#################################  
# All authorization events
[cmdrep_authorization]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) AND (header.event_name="AUE_ssauthorize")

[cmdrep_authentication]
search = (index=cmdreporter sourcetype=cmdreporter:auth) (header.event_id=45023 OR header.event_id=45021 OR header.event_id=45026)

# All auth events
[cmdrep_auth]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize")

# Auth Failure
[cmdrep_auth_failure]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") return.description="failure:*"

# Auth Success
[cmdrep_auth_success]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") return.description="success"

# Auth Failure - Password
[cmdrep_auth_failure_password]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") texts{}="Verify password*" subject.process_name="/System/Library/*/authorizationhost.bundle/Contents/MacOS/authorizationhost" return.description="failure:*"

# Auth Failure - Touch ID
[cmdrep_auth_failure_touchid]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") texts{}="Touch ID authentication" return.description="failure:*"

[cmdrep_auth_login_piv]
search = (`cmdrep_indexes`) (texts{}="Token PIN authentication" AND header.event_name=AUE_auth_user)

[cmdrep_auth_login_piv_success]
search = (`cmdrep_indexes`) (texts{}="Token PIN authentication" AND header.event_name=AUE_auth_user AND return.error=0)

[cmdrep_auth_login_piv_failed]
search = (`cmdrep_indexes`) (texts{}="Token PIN authentication" AND header.event_name=AUE_auth_user AND return.error!=0)

[cmdrep_auth_login_service_acct]
search = (index=cmdreporter sourcetype=cmdreporter:auth) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") (subject.audit_id<=500 OR subject.audit_user_name="_*")

[cmdrep_auth_login_service_acct_failure]
search = (index=cmdreporter sourcetype=cmdreporter:auth) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") (subject.audit_id<=500 OR subject.audit_user_name="_*") (return.error!=0)

[cmdrep_auth_login_service_acct_success]
search = (index=cmdreporter sourcetype=cmdreporter:auth) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") (subject.audit_id<=500 OR subject.audit_user_name="_*") (return.error=0)

# Auth Success - Password
[cmdrep_auth_success_password]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") texts{}="Verify password*" subject.process_name="/System/Library/*/authorizationhost.bundle/Contents/MacOS/authorizationhost" return.description="success"

# Auth Success - Touch ID
[cmdrep_auth_success_touchid]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") texts{}="Touch ID authentication" return.description="success"

[cmdrep_auth_service_acct_login]
search = (index=cmdreporter sourcetype=cmdreporter:auth) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") (subject.audit_id<=500 OR subject.audit_user_name="_*")

[cmdrep_auth_service_acct_login_failure]
search = (index=cmdreporter sourcetype=cmdreporter:auth) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") (subject.audit_id<=500 OR subject.audit_user_name="_*") (return.error!=0)

[cmdrep_auth_service_acct_login_success]
search = (index=cmdreporter sourcetype=cmdreporter:auth) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") (subject.audit_id<=500 OR subject.audit_user_name="_*") (return.error=0)

[cmdrep_auth_escalated_privileged]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) auth_category="system*"

[cmdrep_auth_privileged_escalation]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) auth_mech_verb="*privileged*"

[cmdrep_auth_privileged_preference_sharing]
search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) auth_category="com.apple.opendirectoryd.linkidentity"

# Auth - Privileged (sudo)
# [cmdrep_auth_privileged_sudo]
# search = (`cmdrep_indexes` `cmdrep_sourcetype_auth`) NOT (return.description="failure : Operation not permitted" OR return.error="255" OR header.event_name="AUE_ssauthorize") subject.process_name="/usr/bin/sudo"

## Disk/Volume

# All Mount/Unmount activity
[cmdrep_diskvol]
search = (`cmdrep_indexes` `cmdrep_sourcetype_disk`)

# Disk/Volume mounted
[cmdrep_diskvol_mount]
search = (`cmdrep_indexes` `cmdrep_sourcetype_disk`) header.event_name="AUE_MOUNT"

# Disk/Volume unmounted
[cmdrep_diskvol_unmount]
search = (`cmdrep_indexes` `cmdrep_sourcetype_disk`) header.event_name="AUE_UNMOUNT"


#################################
#  Execution
#################################  
# All exec events
[cmdrep_exec]
search = (`cmdrep_indexes` `cmdrep_sourcetype_exec`)

# App launched by root or background process
[cmdrep_exec_privileged_background]
search = (`cmdrep_indexes` `cmdrep_sourcetype_exec`) subject.effective_user_name="root"

# Firewall activity
[cmdrep_exec_firewall]
search = (`cmdrep_indexes` `cmdrep_sourcetype_exec`) subject.process_name="/usr/libexec/ApplicationFirewall/socketfilterfw"


# All user elevated priv actions
[cmdrep_exec_privileged_actions]
search = (`cmdrep_indexes` `cmdrep_sourcetype_exec`) NOT subject.audit_id="0" (subject.effective_user_id="0")

[cmdrep_exec_from_external]
search = (`cmdrep_indexes` sourcetype=cmdreporter:exec) subject.process_name="/Volumes/*"


### TODO - rename and place this somewhere
[cmdrep_global_service_action]
search = (`cmdrep_indexes` sourcetype=cmdreporter*) (subject.audit_user_name=-1 OR subject.terminal_id.port=0)


[cmdrep_exec_from_hidden_folder]
search = (`cmdrep_indexes` `cmdrep_sourcetype_exec`) (subject.process_name="*/\.*")



[cmdrep_exec_service_action]
search = (`cmdrep_indexes` `cmdrep_sourcetype_exec`) (subject.audit_user_name=-1 OR subject.terminal_id.port=0)

[cmdrep_exec_applescript_action]
search = (`cmdrep_indexes` `cmdrep_sourcetype_exec`) (subject.process_name="/usr/bin/osascript" OR subject.process_name="osascript")

#################################
#  File
#################################  

# All file events
[cmdrep_file]
search = (`cmdrep_indexes` `cmdrep_sourcetype_file`)

# Crontab activity
# TODO - Is this just at or the crontab as well?
[cmdrep_file_crontab]
search = (`cmdrep_indexes` `cmdrep_sourcetype_file`) file_event_info.path="/private/var/at/*"

# Change to the etc folder
[cmdrep_file_etc]
search = (`cmdrep_indexes` `cmdrep_sourcetype_file`) file_event_info.path="/private/etc/*"

# File activity on the hosts file
[cmdrep_file_etc_hosts]
search = (`cmdrep_indexes` `cmdrep_sourcetype_file`) file_event_info.path="/private/etc/hosts"

# Login Preferences activity
[cmdrep_file_loginprefs]
search = (`cmdrep_indexes` `cmdrep_sourcetype_file`) file_event_info.path="/Users/*/Library/Preferences/com.apple.systempreferences.plist"

# Startup Items activity
[cmdrep_file_startupitems]
search = (`cmdrep_indexes` `cmdrep_sourcetype_file`) file_event_info.path="*/Library/StartupItems/*"

[cmdrep_file_airdrop_send]
search = (`cmdrep_indexes` `cmdrep_sourcetype_service`) exec_args.args_compiled="*com.apple.share.AirDrop*"

# [cmdrep_file_airdrop_recieve]

#################################
#  Hardware
#################################  

# All hardware events
[cmdrep_hardware]
search = (`cmdrep_indexes` `cmdrep_sourcetype_hardware`)

# All Removeable hardware events
[cmdrep_hardware_removable]
search = (`cmdrep_indexes` `cmdrep_sourcetype_hardware`) hardware_event_info.device_attributes.Removable="yes"

# All USB hardware events
[cmdrep_hardware_usb]
search = (`cmdrep_indexes` `cmdrep_sourcetype_hardware`) hardware_event_info.device_class="IOUSB*"

# USB device connected
[cmdrep_hardware_usb_connected]
search = (`cmdrep_indexes` `cmdrep_sourcetype_hardware`) hardware_event_info.device_class="IOUSB*" hardware_event_info.device_status="connected"

# USB device disconnected
[cmdrep_hardware_usb_disconnected]
search = (`cmdrep_indexes` `cmdrep_sourcetype_hardware`) hardware_event_info.device_class="IOUSB*" hardware_event_info.device_status="disconnected"


#################################
#  Internal
#################################  
# All internal events
[cmdrep_internal]
search = (`cmdrep_indexes` `cmdrep_sourcetype_internal`)

# License events
[cmdrep_internal_license]
search = (`cmdrep_indexes` `cmdrep_sourcetype_internal`) header.event_name="LICENSE_INFO_EVENT"

# Signal events
[cmdrep_internal_signal]
search = (`cmdrep_indexes` `cmdrep_sourcetype_internal`) header.event_name="SIGNAL_EVENT"


#################################
#  Listen
#################################  
# All listen events
[cmdrep_listen]
search = (`cmdrep_indexes` `cmdrep_sourcetype_listen`)


#################################
#  Misc
#################################  
# All miscelanious events
[cmdrep_misc]
search = (`cmdrep_indexes` `cmdrep_sourcetype_misc`)


#################################
#  Network
#################################  
# All network events
[cmdrep_network]
search = (`cmdrep_indexes` `cmdrep_sourcetype_network`)

# System network events
[cmdrep_network_background_service]
search = (`cmdrep_indexes` `cmdrep_sourcetype_network`) socket_inet.ip_address="*" subject.audit_user_name="-1"

# User network events
[cmdrep_network_interactive_non-privileged]
search = (`cmdrep_indexes` `cmdrep_sourcetype_network`) socket_inet.ip_address="*" subject.terminal_id.port!=0 NOT subject.audit_user_name="-1"


#################################
#  System Preferences Events
#################################  
[cmdrep_preference_system]
search = (`cmdrep_indexes` auth_category="system.pref*")

[cmdrep_preference_sharing]
search = (`cmdrep_indexes` auth_category="com.apple.opendirectoryd.linkidentity")

#################################
#  ptrace
#################################  
# All ptrace events
[cmdrep_ptrace]
search = (`cmdrep_indexes` `cmdrep_sourcetype_ptrace`)

#################################
#  Session
#################################  
# All session events
[cmdrep_session]
search = (`cmdrep_indexes` `cmdrep_sourcetype_session`)


#################################
#  Task
#################################  
[cmdrep_task]
search = (`cmdrep_indexes` `cmdrep_sourcetype_task`)


#################################
#  Time
#################################  
# All time events
[cmdrep_time]
search = (`cmdrep_indexes` `cmdrep_sourcetype_time`)

